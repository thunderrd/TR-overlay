#!en;1.1.5

#[gtk-about]
[Icon]
#j+[0;128] Desired icon size for this applet
#{Set to 0 to use the default applet size}
icon size = 0;0

#s Name of the icon as it will appear in its caption in the dock:
name = Compiz Icon

#d Name of the dock it belongs to:
dock name = 

icon=
order=

#F[Applet's Handbook]
frame_hand=
#A
handbook=compiz-icon

#[gtk-convert]
[Desklet]

#X[Position]
frame_pos =

#b Lock position?
#{If locked, the desklet cannot be moved by simply dragging it with the left mouse button. It can still be moved with ALT + left-click.}
locked = false

#j+[48;512] Desklet dimensions (width x height):
#{Depending on your WindowManager, you may be able to resize this with ALT + middle-click or ALT + left-click.}
size = 96;96

#i[-2048;2048] Desklet position (x, y):
#{Depending on your WindowManager, you may be able to move this with ALT + left-click.}
x position=0
#i[-2048;2048] ...
y position=0

#I[-180;180] Rotation:
#{You can quickly rotate the desklet with the mouse, by dragging the little buttons on its left and top sides.}
rotation = 0

#X[Visibility]
frame_visi =

#b Is detached from the dock
initially detached=false
#l[Normal;Keep above;Keep below;Keep on widget layer;Reserve space] Visibility:
#{for CompizFusion's "widget layer", set behaviour in Compiz to: (class=Cairo-dock & type=utility)}
accessibility=0
#b Should be visible on all desktops?
sticky=true


#F[Decorations;gtk-orientation-portrait]
frame_deco=

#o+ Choose a decoration theme for this desklet:
#{Choose 'Custom decorations' to define your own decorations below.}
decorations = default

#v
sep_deco =

#S+ Background image:
#{Image to be displayed below drawings, e.g. a frame. Leave empty for no image.}
bg desklet =
#e+[0;1] Background transparency:
bg alpha = 1
#i+[0;256] Left offset:
#{in pixels. Use this to adjust the left position of drawings.}
left offset = 0
#i+[0;256] Top offset:
#{in pixels. Use this to adjust the top position of drawings.}
top offset = 0
#i+[0;256] Right offset:
#{in pixels. Use this to adjust the right position of drawings.}
right offset = 0
#i+[0;256] Bottom offset:
#{in pixels. Use this to adjust the bottom position of drawings.}
bottom offset = 0
#S+ Foreground image:
#{Image to be displayed above the drawings, e.g. a reflection. Leave empty for no image.}
fg desklet =
#e+[0;1] Foreground tansparency:
fg alpha = 1

#[gtk-preferences]
[Configuration]

#F[Actions;gtk-preferences]
frame_act = 

#l[None;Switch WM;Widget Layer;Expose;Show Desktop] Action on middle click :
#{Except when switching to another WM, you must activate the Dbus plugin in Compiz along with the plugin corresponding to the desired action.}
middle click = 1

#s Custom command for system's Windows Manager:
#{This command will be used to launch the system WM. Leave blank to use the default.}
ccmd =

#b Auto-reload Compiz?
#{If Compiz quits unexpectedly, Cairo-Dock will restart it. You must then quit Compiz from the dock.}
auto reload compiz = false
#b Auto-reload the Decorator?
#{If the decorator quits unexpectedly, Cairo-Dock will restart it. ou must then quit Compiz from the dock.}
auto reload decorator = true

#b Force Compiz settings on startup?
#{Load Compiz with options on startup.}
force = false

#b Steal the application's icon from the taskbar?
#{This will prevent the CSSM or Emerald icons appearing in the taskbar. The corresponding sub-dock's icons will then behave as a launcher and an application.}
inhibate appli = true

#b Add Exposition & Widget Layer to sub-dock?
#{Display two icons for Compiz Exposition & Widget Layer plug-ins in the applet's sub-dock. Otherwise they will be available in the menu.}
script = true

#b Add Emerald Configuration to sub-dock?
#{Display an icon for the Emerald configuration panel in the applet's sub-dock.}
emerald = true


#F[Compiz Options;gtk-info]
frame_co = 
#b Use Loose Binding?
#{With strict binding, textures are bound whenever they are enabled. With loose binding they are enabled when created. The Nvidia driver seems a bit slow when binding textures, that's why this option gives a heavy performance increase with Nvidia cards.}
binding = false
#b Use Indirect Rendering?
#{Only use these options if you know what you're doing.?}
irendering = false
#b Only Current Screen?
#{Useful when using two or more separate X screens.}
ulocalscreen = false
#E1[emerald;gtk-window-decorator;kde-window-decorator;heliodor] Choose your Window Decorator:
#{By default this will be Emerald.}
system decorator = 

#F
frame_sub=
#n+ Sub-dock view name:
#{Leave empty to use default sub-dock view.}/
renderer = 

#F[Images;gtk-dialog-info]
frame_img = 
#S+ 'Default' icon image name:
#{Leave empty to use the default icon.}
default icon = 
#S+ 'Broken' icon image name:
#{Leave empty to use the default icon.}
broken icon = 
#S+ 'Other WM' icon image name:
#{Leave empty to use the default icon.}
other icon = 
#S+ 'Settings' icon image name:
#{Leave empty to use the default icon.}
setting icon = 
#S+ 'Emerald' icon image name:
#{Leave empty to use the default icon.}
emerald icon = 
#S+ 'Reload' icon image name:
#{Leave empty to use the default icon.}
reload icon = 
#S+ 'Exhibition' icon image name:
#{Leave empty to use the default icon.}
expo icon = 
#S+ 'Widget Layer' icon image name:
#{Leave empty to use the default icon.}
wlayer icon = 
